[gd_scene load_steps=6 format=2]

[ext_resource path="res://Resources/Icons/ClassicLandscapeLab/pv_icon.png" type="Texture2D" id=2]
[ext_resource path="res://UI/Fonts/TextOutlined.tres" type="FontFile" id=3]

[sub_resource type="GDScript" id=3]
script/source = "extends Node3D

#
# This scene can be added to any node in order to display a tooltip for it when the player is nearby.
#

@onready var label_node = get_node(\"SubViewport/CenterContainer/PanelContainer/VBoxContainer/Label\")
@onready var icon_node = get_node(\"SubViewport/CenterContainer/PanelContainer/VBoxContainer/MarginContainer/TextureRect\")

@export var label: String :
	get:
		return label # TODOConverter40 Copy here content of get_label_text
	set(mod_value):
		mod_value  # TODOConverter40 Copy here content of set_label_text
@export var icon: Resource :
	get:
		return icon # TODOConverter40 Copy here content of get_icon
	set(mod_value):
		mod_value  # TODOConverter40 Copy here content of set_icon

var ready = false


func _ready():
	visible = false
	#.connect(\"asset_show_tooltip\",Callable(self,\"_on_display_tooltip\").bind(true))
	#GlobalSignal.connect(\"asset_hide_tooltip\",Callable(self,\"_on_display_tooltip\").bind(false))
	ready = true
	update()


func update():
	if ready:
		if label != null:
			label_node.text = label
		icon_node.texture = icon


# Set the text to display checked the tooltip
func set_label_text(text):
	label = text
	update()


func get_label_text():
	return label_node.text


# Set an icon to display above the text
func set_icon(img):
	icon = img
	update()


func get_icon():
	return icon_node.texture


func _on_display_tooltip(should_display):
	visible = should_display
"

[sub_resource type="StandardMaterial3D" id=1]
flags_unshaded = true
flags_no_depth_test = true
flags_fixed_size = true
flags_albedo_tex_force_srgb = true
params_blend_mode = 1
params_billboard_mode = 1
params_use_alpha_scissor = true
params_alpha_scissor_threshold = 0.1

[sub_resource type="ViewportTexture" id=2]
flags = 4
viewport_path = NodePath("SubViewport")

[node name="Tooltip3D" type="Node3D"]
script = SubResource( 3 )

[node name="SubViewport" type="SubViewport" parent="."]
size = Vector2( 300, 100 )
transparent_bg = true
handle_input_locally = false
hdr = false
disable_3d = true
render_target_v_flip = true
render_target_update_mode = 3

[node name="CenterContainer" type="CenterContainer" parent="SubViewport"]
offset_right = 300.0
offset_bottom = 100.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="PanelContainer" type="PanelContainer" parent="SubViewport/CenterContainer"]
offset_left = 104.0
offset_top = 4.0
offset_right = 195.0
offset_bottom = 95.0

[node name="VBoxContainer" type="VBoxContainer" parent="SubViewport/CenterContainer/PanelContainer"]
offset_left = 14.0
offset_top = 14.0
offset_right = 77.0
offset_bottom = 77.0

[node name="MarginContainer" type="MarginContainer" parent="SubViewport/CenterContainer/PanelContainer/VBoxContainer"]
offset_right = 63.0
offset_bottom = 32.0
minimum_size = Vector2( 32, 32 )

[node name="TextureRect" type="TextureRect" parent="SubViewport/CenterContainer/PanelContainer/VBoxContainer/MarginContainer"]
offset_right = 63.0
offset_bottom = 32.0
texture = ExtResource( 2 )
expand = true
stretch_mode = 6

[node name="Label" type="Label" parent="SubViewport/CenterContainer/PanelContainer/VBoxContainer"]
offset_top = 40.0
offset_right = 63.0
offset_bottom = 63.0
custom_fonts/font = ExtResource( 3 )
text = "0.0 kWh"

[node name="TooltipSprite" type="Node3D" parent="."]

[node name="Sprite3D" type="Sprite3D" parent="TooltipSprite"]
layers = 64
material_override = SubResource( 1 )
cast_shadow = 0
pixel_size = 0.004
texture = SubResource( 2 )
